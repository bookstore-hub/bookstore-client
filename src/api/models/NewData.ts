/* tslint:disable */
/* eslint-disable */
/**
 * Bookstore - Server
 * Service that exposes the Bookstore API via REST
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * The book data
 * @export
 * @interface NewData
 */
export interface NewData {
    /**
     * 
     * @type {string}
     * @memberof NewData
     */
    title: string;
    /**
     * 
     * @type {Date}
     * @memberof NewData
     */
    dateOfPublication?: Date;
    /**
     * 
     * @type {string}
     * @memberof NewData
     */
    synopsis?: string;
    /**
     * 
     * @type {number}
     * @memberof NewData
     */
    numberOfPages: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof NewData
     */
    authors: Array<string>;
}

/**
 * Check if a given object implements the NewData interface.
 */
export function instanceOfNewData(value: object): value is NewData {
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('numberOfPages' in value) || value['numberOfPages'] === undefined) return false;
    if (!('authors' in value) || value['authors'] === undefined) return false;
    return true;
}

export function NewDataFromJSON(json: any): NewData {
    return NewDataFromJSONTyped(json, false);
}

export function NewDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): NewData {
    if (json == null) {
        return json;
    }
    return {
        
        'title': json['title'],
        'dateOfPublication': json['dateOfPublication'] == null ? undefined : (new Date(json['dateOfPublication'])),
        'synopsis': json['synopsis'] == null ? undefined : json['synopsis'],
        'numberOfPages': json['numberOfPages'],
        'authors': json['authors'],
    };
}

export function NewDataToJSON(json: any): NewData {
    return NewDataToJSONTyped(json, false);
}

export function NewDataToJSONTyped(value?: NewData | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'title': value['title'],
        'dateOfPublication': value['dateOfPublication'] == null ? undefined : ((value['dateOfPublication']).toISOString().substring(0,10)),
        'synopsis': value['synopsis'],
        'numberOfPages': value['numberOfPages'],
        'authors': value['authors'],
    };
}

